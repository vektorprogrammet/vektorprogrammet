app:
    resource: "@AppBundle/Controller/"
    type:     annotation

#LiipImagineBundle
_liip_imagine:
    resource: "@LiipImagineBundle/Resources/config/routing.yaml"

github_webook:
  path: /webhook/github
  defaults: { _controller: AppBundle:GitHub:deploy }
  methods: [POST]

##########################################
#             Static pages               #
##########################################
home:
 path: /
 defaults: { _controller: AppBundle:Home:show }
 methods: [GET]

home_post:
 path: /
 defaults: { _controller: AppBundle:Home:post }
 methods: [POST]

students:
 path: /studenter
 defaults: { _controller: AppBundle:Assistant:index }
 methods: [GET]

schools:
 path: /skoler
 defaults: { _controller: AppBundle:Teacher:index }
 methods: [GET]

businesses:
 path: /bedrifter
 defaults: { _controller: AppBundle:AboutVektor:show }
 methods: [GET]

about:
 path: /omvektor
 defaults: { _controller: AppBundle:AboutVektor:show }
 methods: [GET]

faq:
 path: /faq
 defaults: {_controller: AppBundle:AboutVektor:show}
 methods: [GET]

parents:
 path: /foreldre
 defaults: {_controller: AppBundle:Parents:index}
 methods: [GET]

# Updates static content
# Not meant for rendering a page. Receives a post request and updates the database.
update_static_content:
 path: /updatestaticcontent
 defaults: {_controller: AppBundle:StaticContent:update }
 methods: [POST]

##########################################
#                Control Panel           #
##########################################

control_panel:
  path: /kontrollpanel
  defaults: { _controller: AppBundle:ControlPanel:show }
  methods: [GET]


##########################################
#               Todo List                #
##########################################

todo_list:
 path: /kontrollpanel/sjekkliste
 defaults: { _controller: AppBundle:TodoList:show }
 methods: [GET]


create_todoItem:
  path: /kontrollpanel/sjekkliste/opprett
  defaults: {_controller: AppBundle:TodoList:createTodo, id: null }
  methods: [GET, POST]
  requirements:
   id: \d+

edit_todoItem:
  path: /kontrollpanel/sjekkliste/endre/{id}
  defaults: {_controller: AppBundle:TodoList:editTodo }
  methods: [GET, POST]
  requirements:
   id: \d+

toggle_isCompleted:
  path: /kontrollpanel/sjekkliste/utfor/{id}
  defaults: {_controller: AppBundle:TodoList:toggle }
  methods: [POST]
  requirements:
   id: \d+

delete_todo_item:
  path: /kontrollpanel/sjekkliste/slett/{id}
  defaults: {_controller: AppBundle:TodoList:deleteTodoItem }
  methods: [POST]
  requirements:
   id: \d+

##########################################
#                Changelog               #
##########################################

changelog_create:
 path: /kontrollpanel/changelog/create
 defaults: { _controller: AppBundle:ChangeLog:createChangeLog }
 methods: [GET, POST]

changelogitem_edit:
 path: /kontrollpanel/changelog/edit/{id}
 defaults: { _controller: AppBundle:ChangeLog:editChangeLog }
 methods: [GET, POST]
 requirements:
  id: \d+

changelogitem_delete:
 path: /kontrollpanel/changelog/delete/{id}
 defaults: { _controller: AppBundle:ChangeLog:deleteChangeLog }
 methods: [POST]
 requirements:
  id: \d+

changelog_show_all:
 path: /kontrollpanel/changelog/show/all
 defaults: { _controller: AppBundle:ChangeLog:show }
 methods: [GET]

##########################################
#                Survey                  #
##########################################

survey_show:
  path: /undersokelse/{id}
  defaults: { _controller: AppBundle:Survey:show }
  methods: [GET, POST]
  requirements:
    id: \d+

survey_show_user:
 path: /undersokelse/u/{id}
 defaults: { _controller: AppBundle:Survey:showUser}
 methods: [GET, POST]
 requirements:
  id: \d+

survey_show_user_id:
 path: /undersokelse/u/{id}/{userid}
 defaults: { _controller: AppBundle:Survey:showId }
 methods: [GET, POST]
 requirements:
  id: \d+


survey_show_admin:
 path: /kontrollpanel/undersokelse/{id}
 defaults: { _controller: AppBundle:Survey:showAdmin }
 methods: [GET, POST]
 requirements:
  id: \d+


survey_team_show_admin:
  path: /kontrollpanel/undersokelse/{id}
  defaults: { _controller: AppBundle:Survey:showAdmin }
  methods: [GET, POST]
  requirements:
   id: \d+


survey_create:
  path: /kontrollpanel/undersokelse/opprett
  defaults: { _controller: AppBundle:Survey:createSurvey }
  methods: [GET, POST]

survey_edit:
 path: /kontrollpanel/undersokelse/endre/{id}
 defaults: { _controller: AppBundle:Survey:editSurvey }
 methods: [GET, POST]
 requirements:
  id: \d+

survey_delete:
 path: /kontrollpanel/undersokelse/slett/{id}
 defaults: { _controller: AppBundle:Survey:deleteSurvey }
 methods: [POST]
 requirements:
  id: \d+

survey_copy:
 path: /kontrollpanel/undersokelse/kopier/{id}
 defaults: { _controller: AppBundle:Survey:copySurvey }
 methods: [GET, POST]
 requirements:
  id: \d+

survey_results:
 path: /kontrollpanel/undersokelse/resultater/{id}
 defaults: { _controller: AppBundle:Survey:resultSurvey }
 methods: [GET]
 requirements:
  id: \d+

survey_get_results_csv:
 path: /kontrollpanel/undersokelse/resultater/{id}.csv
 defaults: { _controller: AppBundle:Survey:getSurveyResultCSV }
 methods: [GET]
 requirements:
  id: \d+

survey_get_all_results:
 path: /kontrollpanel/api/undersokelse/resultat/{id}
 defaults: { _controller: AppBundle:Survey:getSurveyResult }
 methods: [GET]
 requirements:
  id: \d+

survey_popup_reserve:
   path:   /togglepopup
   defaults: { _controller: AppBundle:Survey:toggleReservedFromPopUp }
   methods: [POST]
   requirements:
    id: \d+

survey_popup_close:
 path:   /closepopup
 defaults: { _controller: AppBundle:Survey:closePopUp }
 methods: [POST]
 requirements:
  id: \d+

survey_notifiers:
 path: /kontrollpanel/undersokelsevarsel
 defaults: { _controller: AppBundle:SurveyNotifier:surveyNotificationCollections }
 methods: [GET]

survey_notifier_create:
 path: /kontrollpanel/undersokelsevarsel/opprett
 defaults: { _controller: AppBundle:SurveyNotifier:createSurveyNotifier }
 methods: [GET, POST]

survey_notifier_edit:
  path: /kontrollpanel/undersokelsevarsel/rediger/{id}
  defaults: { _controller: AppBundle:SurveyNotifier:createSurveyNotifier }
  methods: [GET, POST]
  requirements:
    id: \d+

survey_notifier_delete:
  path: /kontrollpanel/undersokelsevarsel/slett/{id}
  defaults: { _controller: AppBundle:SurveyNotifier:deleteSurveyNotifier }
  methods: [POST]
  requirements:
    id: \d+

survey_notifier_send:
 path: /kontrollpanel/undersokelsevarsel/send/{id}
 defaults: { _controller: AppBundle:SurveyNotifier:sendSurveyNotifications }
 methods: [GET, POST]
 requirements:
  id: \d+


##########################################
#                Usergroupings           #
##########################################
usergroup_collections:
 path: /kontrollpanel/brukergruppesamling
 defaults: { _controller: AppBundle:UserGroupCollection:userGroupCollections }
 methods: [GET]


usergroup_collection_create:
 path: /kontrollpanel/brukergruppesamling/opprett
 defaults: { _controller: AppBundle:UserGroupCollection:createUserGroupCollection }
 methods: [GET, POST]


usergroup_collection_edit:
 path: /kontrollpanel/brukergruppesamling/opprett/{id}
 defaults: { _controller: AppBundle:UserGroupCollection:createUserGroupCollection }
 methods: [GET, POST]
 requirements:
  id: \d+


usergroup_collection_delete:
 path: /kontrollpanel/brukergruppesamling/slett/{id}
 defaults: { _controller: AppBundle:UserGroupCollection:deleteUserGroupCollection }
 methods: [POST]
 requirements:
  id: \d+

##########################################
#             Statistics                 #
##########################################

statistics_application_show:
  path: /kontrollpanel/statistikk/opptak
  defaults: { _controller: AppBundle:ApplicationStatistics:show }
  methods: [GET]
  requirements:
    department: \d+
    semester: \d+


##########################################
#            BoardAndTeam                #
##########################################

boardandteam_show:
 path: /styretogteam
 defaults: { _controller: AppBundle:BoardAndTeam:show }
 methods: [GET]


##########################################
#               Profile                  #
##########################################

profile:
 path:   /profile
 defaults: { _controller: AppBundle:Profile:show }
 methods: [GET]

profile_activate_with_user_code:
  path: /bruker/aktiver/{newUserCode}
  defaults: {_controller: AppBundle:Profile:activateNewUser }
  methods: [GET, POST]

profile_activate_user:
 path:   /profile/aktiv/{id}
 defaults: { _controller: AppBundle:Profile:activateUser }
 methods: [POST]
 requirements:
    id: \d+

profile_deactivate_user:
 path:   /profile/deaktiv/{id}
 defaults: { _controller: AppBundle:Profile:deactivateUser }
 methods: [POST]
 requirements:
    id: \d+

profile_change_role:
 path:   /profile/rolle/endre/{id}
 defaults: { _controller: AppBundle:Profile:changeRole }
 methods: [POST]
 requirements:
    id: \d+

profile_certificate:
 path:   /profile/attest/{id}
 defaults: { _controller: AppBundle:Profile:downloadCertificate }
 methods: [GET]

specific_profile:
 path:   /profile/{id}
 defaults: { _controller: AppBundle:Profile:showSpecificProfile }
 methods: [GET]
 requirements:
  id: \d+

edit_user_company_email:
  path: /kontrollpanel/bruker/vekorepost/endre/{id}
  defaults: { _controller: AppBundle:Profile:editCompanyEmail }
  methods: [GET, POST]
  requirements:
    id: \d+

profile_edit_admin:
 path:   /kontrollpanel/profil/rediger/{id}
 defaults: { _controller: AppBundle:Profile:editProfileInformationAdmin }
 methods: [GET, POST]

profile_edit:
 path:   /profil/rediger
 defaults: { _controller: AppBundle:Profile:editProfileInformation }
 methods: [GET, POST]

profile_edit_password:
 path:   /profil/rediger/passord/
 defaults: { _controller: AppBundle:Profile:editProfilePassword }
 methods: [GET, POST]

profile_edit_photo:
  path: /profil/rediger/profilbilde/{id}
  defaults: { _controller: AppBundle:ProfilePhoto:showEditProfilePhoto }
  methods: [GET]
  requirements:
    id: \d+

profile_upload_photo:
  path: /profil/rediger/profilbilde/upload/{id}
  defaults: { _controller: AppBundle:ProfilePhoto:editProfilePhotoUpload }
  methods: [POST]
  requirements:
    id: \d+

##########################################
#          Participant History           #
##########################################

participanthistory_show:
 path:   /kontrollpanel/deltakerhistorikk
 defaults: { _controller: AppBundle:ParticipantHistory:show }
 methods: [GET]

assistant_history_delete:
 path: /kontrollpanel/deltakerhistorikk/slett/{id}
 defaults: { _controller: AppBundle:AssistantHistory:delete }
 methods: [POST]

assistant_history_edit:
  path: /kontrollpanel/deltakerhistorikk/rediger/{id}
  defaults: { _controller: AppBundle:AssistantHistory:edit }
  methods: [GET, POST]
  requirements:
    id: \d+

##########################################
#                SSO                     #
##########################################

sso_login:
    path: /sso/login
    defaults: { _controller: AppBundle:Sso:login}
    methods: [POST]

##########################################
#                Login                   #
##########################################

login_route:
 path:   /login
 defaults: { _controller: AppBundle:Security:login }
 methods: [GET]

login_redirect:
  path: /login/redirect
  defaults: { _controller: AppBundle:Security:loginRedirect }
  methods: [GET]

login_check:
 path:   /login_check
 defaults: { _controller: AppBundle:Security:loginCheck }
 methods: [POST]

logout:
 path: /logout
 methods: [GET]

forgot_password:
  path: /resetpassord/{resetCode}
  defaults: { _controller: AppBundle:PasswordReset:resetPassword }
  methods: [GET, POST]
  requirements:
    resetCode: \w+

reset_password:
  path: /resetpassord
  defaults: { _controller: AppBundle:PasswordReset:show }
  methods: [GET, POST]

reset_password_confirmation:
    path: /resetsendt
    defaults: { _controller: AppBundle:PasswordReset:showConfirmation }
    methods: [GET]

##########################################
#               Article                  #
##########################################

news:
  path: /nyheter
  defaults: { _controller: AppBundle:Article:show }
  methods: [GET]

article_show:
  path: /nyhet/{slug}
  defaults: { _controller: AppBundle:Article:showSpecific }
  methods: [GET]

old_article_show:
  path: /artikkel/{slug}
  defaults: { _controller: AppBundle:Article:showSpecific }
  methods: [GET]

article_filter:
  path: /nyheter/{department}
  defaults: { _controller: AppBundle:Article:showFilter }
  methods: [GET]


##########################################
#             ArticleAdmin               #
##########################################

articleadmin_show:
  path: /kontrollpanel/artikkeladmin
  defaults: { _controller: AppBundle:ArticleAdmin:show }
  methods: [GET]

articleadmin_create:
  path: /kontrollpanel/artikkeladmin/opprett
  defaults: { _controller: AppBundle:ArticleAdmin:create }
  methods: [GET, POST]

articleadmin_edit:
  path: /kontrollpanel/artikkeladmin/rediger/{id}
  defaults: { _controller: AppBundle:ArticleAdmin:edit }
  methods: [GET, POST]

articleadmin_sticky:
  path: /kontrollpanel/artikkeladmin/sticky/{id}
  defaults: { _controller: AppBundle:ArticleAdmin:sticky }
  methods: [POST]

articleadmin_delete:
  path: /kontrollpanel/artikkeladmin/slett/{id}
  defaults: { _controller: AppBundle:ArticleAdmin:delete }
  methods: [POST]

##########################################
#            AdmissionAdmin              #
##########################################

admissionadmin_show:
 path: /kontrollpanel/opptak
 defaults: {_controller: AppBundle:AdmissionAdmin:show }
 methods: [GET]

admissionadmin_show_application:
  path: /kontrollpanel/opptakadmin/soknad/{id}
  defaults: {_controller: AppBundle:AdmissionAdmin:showApplication}
  methods: [GET]
  requirements:
    id: \d+

applications_show_new:
 path: /kontrollpanel/opptak/nye
 defaults:
  _controller: AppBundle:AdmissionAdmin:showNewApplications
  department: null
  semester: null
 methods: [GET]

applications_show_assigned:
 path: /kontrollpanel/opptak/fordelt
 defaults: { _controller: AppBundle:AdmissionAdmin:showAssignedApplications }
 methods: [GET]

applications_show_interviewed:
 path: /kontrollpanel/opptak/intervjuet
 defaults: { _controller: AppBundle:AdmissionAdmin:showInterviewedApplications }
 methods: [GET]
 requirements:
    department: \d+
    semester: \d+

applications_show_existing:
 path: /kontrollpanel/opptak/gamle
 defaults: { _controller: AppBundle:AdmissionAdmin:showExistingApplications }
 methods: [GET]
 requirements:
  department: \d+
  semester: \d+

admissionadmin_delete_application_by_id:
 path: /kontrollpanel/opptakadmin/slett/{id}
 defaults: {_controller: AppBundle:AdmissionAdmin:deleteApplicationById }
 methods: [POST]
 requirements:
    id: \d+

admissionadmin_delete_application_bulk:
 path: /kontrollpanel/opptakadmin/slett/bulk
 defaults: {_controller: AppBundle:AdmissionAdmin:bulkDeleteApplication }
 methods: [POST]
 requirements:

register_applicant:
 path: /kontrollpanel/opprettsoker
 defaults: {_controller: AppBundle:AdmissionAdmin:createApplication}
 methods: [GET, POST]

admissionadmin_team_interest:
 path: /kontrollpanel/opptakadmin/teaminteresse
 defaults: {_controller: AppBundle:AdmissionAdmin:showTeamInterest}
 methods: [GET]
 requirements:
  department: \d+
  semester: \d+

##########################################
#              UserAdmin                 #
##########################################

useradmin_show:
 path: /kontrollpanel/brukeradmin
 defaults: {_controller: AppBundle:UserAdmin:show }
 methods: [GET]

useradmin_filter_users_by_department:
 path: /kontrollpanel/brukeradmin/avdeling/{id}
 defaults: {_controller: AppBundle:UserAdmin:showUsersByDepartment }
 methods: [GET]
 requirements:
    id: \d+

useradmin_delete_user_by_id:
 path: /kontrollpanel/brukeradmin/slett/{id}
 defaults: {_controller: AppBundle:UserAdmin:deleteUserById }
 methods: [POST]
 requirements:
    id: \d+

useradmin_create_user:
 path: /kontrollpanel/brukeradmin/opprett/{id}
 defaults: {_controller: AppBundle:UserAdmin:createUser, id: null }
 methods: [GET, POST]
 requirements:
    id: \d+

send_user_activation_mail:
  path: /kontrollpanel/brukeradmin/sendaktivering/{id}
  defaults: { _controller: AppBundle:UserAdmin:sendActivationMail }
  methods: [POST]
  requirements:
    id: \d+


##########################################
#               Receipt                  #
##########################################
receipts_show:
  path: /kontrollpanel/utlegg
  defaults: {_controller: AppBundle:Receipt:show }
  methods: [GET]

receipts_show_individual:
  path: /kontrollpanel/utlegg/{user}
  defaults: {_controller: AppBundle:Receipt:showIndividual }
  methods: [GET]
  requirements:
    receipt: \d+

receipt_create:
  path: /utlegg
  defaults: {_controller: AppBundle:Receipt:create }
  methods: [GET, POST]

receipt_edit:
  path: /utlegg/rediger/{receipt}
  defaults: {_controller: AppBundle:Receipt:edit }
  methods: [GET, POST]
  requirements:
    receipt: \d+

receipt_edit_status:
  path: /kontrollpanel/utlegg/status/{receipt}
  defaults: {_controller: AppBundle:Receipt:editStatus }
  methods: [POST]
  requirements:
    receipt: \d+

receipt_admin_edit:
  path: /kontrollpanel/utlegg/rediger/{receipt}
  defaults: {_controller: AppBundle:Receipt:adminEdit }
  methods: [GET, POST]
  requirements:
    receipt: \d+

receipt_delete:
  path: /utlegg/slett/{receipt}
  defaults: { _controller: AppBundle:Receipt:delete }
  methods: [POST]
  requirements:
    receipt: \d+

##########################################
#            Admission Period            #
##########################################

admission_period_admin_show:
 path: /kontrollpanel/opptaksperiode
 defaults: {_controller: AppBundle:AdmissionPeriod:show }
 methods: [GET]

admission_period_admin_show_by_department:
 path: /kontrollpanel/opptaksperiode/{id}
 defaults: {_controller: AppBundle:AdmissionPeriod:showByDepartment }
 methods: [GET]
 requirements:
  id: \d+

admission_period_update:
 path: /kontrollpanel/opptaksperiode/update/{id}
 defaults: {_controller: AppBundle:AdmissionPeriod:updateAdmissionPeriod }
 methods: [GET, POST]
 requirements:
    id: \d+

admission_period_create:
 path: /kontrollpanel/opptaksperiode/opprett/{id}
 defaults: {_controller: AppBundle:AdmissionPeriod:createAdmissionPeriod }
 methods: [GET, POST]
 requirements:
    id: \d+

admission_period_delete:
 path: /kontrollpanel/opptaksperiode/slett/{id}
 defaults: {_controller: AppBundle:AdmissionPeriod:delete }
 methods: [POST]
 requirements:
    id: \d+


##########################################
#               Team                     #
##########################################
team_page_it:
    path: /it
    defaults: {_controller: AppBundle:Team:show, id: 9}
    methods: [GET]

team_page:
  path: /team/{id}
  defaults: {_controller: AppBundle:Team:show}
  methods: [GET]

team_application:
  path: /team/application/{id}
  defaults: {_controller: AppBundle:TeamApplication:show}
  methods: [GET, POST]

team_page_department_team:
  path: /team/{departmentCity}/{teamName}
  defaults: {_controller: AppBundle:Team:showByDepartmentAndTeam}
  methods: [GET]

team_application_show:
  path: /kontrollpanel/team/application/{id}
  defaults: {_controller: AppBundle:TeamApplication:showApplication}
  methods: [GET]

team_application_show_all:
  path: /kontrollpanel/team/applications/{id}
  defaults: {_controller: AppBundle:TeamApplication:showAllApplications}
  methods: [GET]
  requirements:
      id: \d+

team_application_delete:
  path: /kontrollpanel/team/applications/slett/{id}
  defaults: {_controller: AppBundle:TeamApplication:deleteTeamApplicationById}
  methods: [POST]
  requirements:
      id: \d+

#teamadmin_show:
# path: /kontrollpanel/teamadmin
# defaults: {_controller: AppBundle:TeamAdmin:show }
# methods: [GET]

teamadmin_create_position:
 path: /kontrollpanel/teamadmin/opprett/stilling
 defaults: {_controller: AppBundle:Position:editPosition }
 methods: [GET, POST]

teamadmin_edit_position:
 path: /kontrollpanel/teamadmin/rediger/stilling/{id}
 defaults: {_controller: AppBundle:Position:editPosition }
 methods: [GET, POST]

teamadmin_show_position:
 path: /kontrollpanel/teamadmin/stillinger
 defaults: {_controller: AppBundle:Position:showPositions }
 methods: [GET]

teamadmin_remove_position:
 path: /kontrollpanel/teamadmin/stilling/slett/{id}
 defaults: {_controller: AppBundle:Position:removePosition }
 methods: [POST]
 requirements:
    id: \d+

teamadmin_show_specific_team:
 path: /kontrollpanel/teamadmin/team/{id}
 defaults: {_controller: AppBundle:TeamAdmin:showSpecificTeam }
 methods: [GET]

teamadmin_update_team_membership:
 path: /kontrollpanel/teamadmin/oppdater/teamhistorie/{id}
 defaults: {_controller: AppBundle:TeamAdmin:updateTeamMembership }
 methods: [GET, POST]
 requirements:
    id: \d+

teamadmin_remove_user_from_team_by_id:
 path: /kontrollpanel/teamadmin/team/slett/bruker/{id}
 defaults: {_controller: AppBundle:TeamAdmin:removeUserFromTeamById }
 methods: [POST]
 requirements:
    id: \d+

teamadmin_add_user_to_team:
 path: /kontrollpanel/teamadmin/team/nytt_medlem/{id}
 defaults: {_controller: AppBundle:TeamAdmin:addUserToTeam }
 methods: [GET, POST]
 requirements:
    id: \d+

teamadmin_create_team_for_department:
 path: /kontrollpanel/teamadmin/avdeling/opprett/{id}
 defaults: {_controller: AppBundle:TeamAdmin:createTeamForDepartment }
 methods: [GET, POST]
 requirements:
    id: \d+

teamadmin_filter_teams_by_department:
 path: /kontrollpanel/teamadmin/avdeling/{id}
 defaults: {_controller: AppBundle:TeamAdmin:showTeamsByDepartment }
 methods: [GET]
 requirements:
    id: \d+

teamadmin_update:
 path: /kontrollpanel/teamadmin/update/{id}
 defaults: {_controller: AppBundle:TeamAdmin:updateTeam }
 methods: [GET, POST]
 requirements:
    id: \d+

teamadmin_delete_team_by_id:
 path: /kontrollpanel/teamadmin/slett/{id}
 defaults: {_controller: AppBundle:TeamAdmin:deleteTeamById }
 methods: [POST]


##########################################
#            DepartmentAdmin             #
##########################################

departmentadmin_show:
 path: /kontrollpanel/avdelingadmin
 defaults: {_controller: AppBundle:Department:show }
 methods: [GET]

departmentadmin_create_department:
 path: /kontrollpanel/avdelingadmin/opprett
 defaults: {_controller: AppBundle:Department:createDepartment }
 methods: [GET, POST]

departmentadmin_delete_department_by_id:
 path: /kontrollpanel/avdelingadmin/slett/{id}
 defaults: {_controller: AppBundle:Department:deleteDepartmentById }
 methods: [POST]
 requirements:
    id: \d+

departmentadmin_update:
 path: /kontrollpanel/avdelingadmin/update/{id}
 defaults: {_controller: AppBundle:Department:updateDepartment }
 methods: [GET, POST]
 requirements:
    id: \d+


##########################################
#              SchoolAdmin               #
##########################################

schooladmin_show:
 path: /kontrollpanel/skoleadmin
 defaults: {_controller: AppBundle:SchoolAdmin:show }
 methods: [GET]

schooladmin_filter_schools_by_department:
 path: /kontrollpanel/skoleadmin/avdeling/{id}
 defaults: {_controller: AppBundle:SchoolAdmin:showSchoolsByDepartment }
 methods: [GET]
 requirements:
    id: \d+

schooladmin_create_school_by_department:
 path: /kontrollpanel/skoleadmin/opprett/{id}
 defaults: {_controller: AppBundle:SchoolAdmin:createSchoolForDepartment }
 methods: [GET, POST]
 requirements:
    id: \d+

schooladmin_update:
 path: /kontrollpanel/skoleadmin/oppdater/{id}
 defaults: {_controller: AppBundle:SchoolAdmin:updateSchool }
 methods: [GET, POST]
 requirements:
    id: \d+

schooladmin_delete_school_by_id:
 path: /kontrollpanel/skoleadmin/slett/{id}
 defaults: {_controller: AppBundle:SchoolAdmin:deleteSchoolById }
 methods: [POST]
 requirements:
    id: \d+

schooladmin_remove_user_from_school_by_id:
 path: /kontrollpanel/skoleadmin/historikk/slett/{id}
 defaults: {_controller: AppBundle:SchoolAdmin:removeUserFromSchool }
 methods: [POST]
 requirements:
    id: \d+

schooladmin_show_users_of_department_superadmin:
 path: /kontrollpanel/skoleadmin/brukere/avdeling/{id}
 defaults: {_controller: AppBundle:SchoolAdmin:showUsersByDepartmentSuperadmin }
 methods: [GET]
 requirements:
    id: \d+

schooladmin_show_users_of_department:
 path: /kontrollpanel/skoleadmin/brukere
 defaults: {_controller: AppBundle:SchoolAdmin:showUsersByDepartment }
 methods: [GET]
 requirements:
    id: \d+

schooladmin_delegate_school_to_user:
 path: /kontrollpanel/skoleadmin/tildel/skole/{id}
 defaults: {_controller: AppBundle:SchoolAdmin:delegateSchoolToUser }
 methods: [GET, POST]
 requirements:
    id: \d+

schooladmin_show_specific_school:
 path: /kontrollpanel/skole/{id}
 defaults: {_controller: AppBundle:SchoolAdmin:showSpecificSchool }
 methods: [GET]
 requirements:
    id: \d+

##########################################
#           AssistantScheduling          #
##########################################

school_allocation:
  path: /kontrollpanel/skole/timeplan/
  defaults: { _controller: AppBundle:AssistantScheduling:index }
  methods: [GET]

school_allocation_api_assistants:
  path: /kontrollpanel/api/assistants
  defaults: { _controller: AppBundle:AssistantScheduling:getAssistants }
  methods: [GET]

school_allocation_api_schools:
  path: /kontrollpanel/api/schools
  defaults: { _controller: AppBundle:AssistantScheduling:getSchools }
  methods: [GET]

school_capacity_create:
    path: /kontrollpanel/skole/capacity/
    defaults: { _controller: AppBundle:SchoolCapacity:create }
    methods: [GET, POST]

school_capacity_edit:
    path: /kontrollpanel/skole/capacity/{id}
    defaults: { _controller: AppBundle:SchoolCapacity:edit }
    methods: [GET, POST]
    requirements:
        id: \d+

##########################################
#              Interview                 #
##########################################
interview_clear_co_interviewer:
 path: /kontrollpanel/intervju/interview_clear_co_interviewer/{id}
 defaults: { _controller: AppBundle:Interview:clearCoInterviewer }
 methods: [POST]
 requirements:
  id: \d+

interview_admin_assign_co_interviewer:
 path: /kontrollpanel/intervju/admin_assign_co_interviewer/{id}
 defaults: { _controller: AppBundle:Interview:adminAssignCoInterviewer }
 methods: [GET, POST]
 requirements:
  id: \d+

interview_assign_co_interviewer:
 path: /kontrollpanel/intervju/assign_co_interviewer/{id}
 defaults: { _controller: AppBundle:Interview:assignCoInterviewer }
 methods: [POST]
 requirements:
  id: \d+

interview_cancel:
 path: /kontrollpanel/intervju/cancel/{id}
 defaults: { _controller: AppBundle:Interview:cancel }
 methods: [POST]
 requirements:
  id: \d+

interview_show:
 path: /kontrollpanel/intervju/vis/{id}
 defaults: { _controller: AppBundle:Interview:show }
 methods: [GET]
 requirements:
  id: \d+

interview_schema:
 path: /kontrollpanel/intervju/skjema
 defaults: { _controller: AppBundle:InterviewSchema:showSchemas }
 methods: [GET]

interview_schema_create:
 path: /kontrollpanel/intervju/skjema/opprett
 defaults: { _controller: AppBundle:InterviewSchema:createSchema }
 methods: [GET, POST]

interview_schema_edit:
 path: /kontrollpanel/intervju/skjema/{id}
 defaults: { _controller: AppBundle:InterviewSchema:editSchema }
 methods: [GET, POST]
 requirements:
  id: \d+

interview_schema_delete:
 path: /kontrollpanel/intervju/skjema/slett/{id}
 defaults: { _controller: AppBundle:InterviewSchema:deleteSchema }
 methods: [POST]
 requirements:
  id: \d+

interview_assign:
 path: /kontrollpanel/intervju/fordel/{id}
 defaults: { _controller: AppBundle:Interview:assign, id: null }
 methods: [GET, POST]
 requirements:
  id: \d+

interview_assign_bulk:
 path: /kontrollpanel/intervju/fordel/bulk
 defaults: { _controller: AppBundle:Interview:bulkAssign }
 methods: [GET, POST]

interview_delete:
 path: /kontrollpanel/intervju/slett/{id}
 defaults: { _controller: AppBundle:Interview:deleteInterview }
 methods: [POST]
 requirements:
  id: \d+

interview_delete_bulk:
 path: /kontrollpanel/intervju/slett/bulk
 defaults: { _controller: AppBundle:Interview:bulkDeleteInterview }
 methods: [POST]

interview_schedule:
 path: /kontrollpanel/intervju/settopp/{id}
 defaults: { _controller: AppBundle:Interview:schedule }
 methods: [GET, POST]
 requirements:
  id: \d+

interview_response:
    path: /intervju/{responseCode}
    defaults: { _controller: AppBundle:Interview:respond }
    methods: [GET]
    requirements:
      reponseCode: \w+

interview_accept_by_response:
    path: /intervju/aksepter/{responseCode}
    defaults: { _controller: AppBundle:Interview:acceptByResponseCode }
    methods: [POST]
    requirements:
      reponseCode: \w+

interview_request_new_time_by_response:
    path: /intervju/nytid/{responseCode}
    defaults: { _controller: AppBundle:Interview:requestNewTime }
    methods: [GET, POST]
    requirements:
      reponseCode: \w+

interview_cancel_by_response:
    path: /intervju/kanseller/tilbakemelding/{responseCode}
    defaults: { _controller: AppBundle:Interview:cancelByResponseCode }
    methods: [GET, POST]
    requirements:
      responseCode: \w+

interview_edit_status:
    path: kontrollpanel/intervju/status/{id}
    defaults: { _controller: AppBundle:Interview:editStatus }
    methods: [POST]
    requirements:
       id: \d+

##########################################
#                File browser            #
##########################################
#ElFinder routes

elfinder:
    path: /kontrollpanel/elfinder/{instance}/{homeFolder}
    defaults: { _controller: FMElfinderBundle:ElFinder:show, instance: default, homeFolder: '' }
    methods: [GET]
ef_connect: #This one is used only internally by FMElfinderBundle?
    path:  /efconnect/{instance}/{homeFolder}
    defaults: { _controller: FMElfinderBundle:ElFinder:load, instance: default, homeFolder: '' }
    methods: [GET, POST]

#Route for opening a file browser window by a user of the website. Not related to ckeditor or any other subsystem.
file_browser:
   path: /filebrowser
   defaults: { _controller: AppBundle:FileBrowser:browse }
   methods: [GET]


#Use when loading for example image files in website
#uploads_folder_serve:
#   path: /Offentlige filer/{file_path}
#   defaults: { _controller: AppBundle:FileBrowser:fileStream }
#   requirements:
#     file_path: .+

#Access to public files for users of the website (Requirement 11.3)
#public_files:
 #  path: /public_files
  # defaults: { _controller: AppBundle:FileBrowser:showPublicFiles }

##########################################
#                File uploader           #
##########################################
file_uploader:
    path: /file_upload/  #Fix this

###########################################
#                 File system             #
#                                         #
#  For streaming files (e.g. images, pdf) #
###########################################
public_files:
   path: /Offentlige filer/{file_path}
   defaults: { _controller: AppBundle:FileBrowser:fileStream }
   methods: [GET]
   requirements:
     file_path: .+

##########################################
#               Substitute               #
##########################################

substitute_show:
  path: /kontrollpanel/vikar
  defaults: { _controller: AppBundle:Substitute:show }
  methods: [GET]
  requirements:
    department: \d+
    semester: \d+

substitute_delete:
 path: /kontrollpanel/vikar/slett/{id}
 defaults: {_controller: AppBundle:Substitute:deleteSubstituteById }
 methods: [GET,POST]
 requirements:
    id: \d+

substitute_create_from_application:
  path: /kontrollpanel/vikar/opprett/{id}
  defaults: {_controller: AppBundle:Substitute:createSubstituteFromApplication }
  methods: [POST]
  requirements:
    id: \d+

substitute_modify:
  path: /kontrollpanel/vikar/rediger/{id}
  defaults: {_controller: AppBundle:Substitute:showModifyForm }
  methods: [GET,POST]
  requirements:
    id: \d+

signature_image_show:
  path: /signatures/{imageName}
  defaults: { _controller: AppBundle:Signature:showSignatureImage }
  methods: [GET]

##########################################
#              Field of study            #
##########################################



create_field_of_study:
  path: /kontrollpanel/linje
  defaults: { _controller: AppBundle:FieldOfStudy:edit }
  methods: [GET, POST]

edit_field_of_study:
  path: /kontrollpanel/linje/{id}
  defaults: { _controller: AppBundle:FieldOfStudy:edit }
  methods: [GET, POST]

show_field_of_studies:
  path: /kontrollpanel/linjer
  defaults: {_controller: AppBundle:FieldOfStudy:show }
  methods: [GET]

##########################################
#           Executive board              #
##########################################
executive_board_page:
  path: /hovedstyret
  defaults: {_controller: AppBundle:ExecutiveBoard:show}
  methods: [GET]

executive_board_show:
 path: /kontrollpanel/hovedstyret
 defaults: {_controller: AppBundle:ExecutiveBoard:showAdmin }
 methods: [GET]

executive_board_add_user_to_board:
 path: /kontrollpanel/hovedstyret/nytt_medlem/{id}
 defaults: {_controller: AppBundle:ExecutiveBoard:addUserToBoard }
 methods: [GET, POST]
 requirements:
    id: \d+

executive_board_remove_user_from_board_by_id:
 path: /kontrollpanel/hovedstyret/slett/bruker/{id}
 defaults: {_controller: AppBundle:ExecutiveBoard:removeUserFromBoardById }
 methods: [POST]
 requirements:
    id: \d+

executive_board_update:
 path: /kontrollpanel/hovedstyret/oppdater
 defaults: {_controller: AppBundle:ExecutiveBoard:updateBoard }
 methods: [GET, POST]
 requirements:
    id: \d+

##########################################
#              Mailing Lists             #
##########################################

generate_mail_lists:
  path: /kontrollpanel/epostlister
  defaults: {_controller: AppBundle:MailingList:show }
  methods: [GET, POST]

generate_assistant_mail_list:
  path: /kontrollpanel/epostlister/assistenter
  defaults: {_controller: AppBundle:MailingList:showAssistants}
  methods: [GET]
  requirements:
    department: \d+
    semester: \d+

generate_team_mail_list:
  path: /kontrollpanel/epostlister/teammedlemmer
  defaults: {_controller: AppBundle:MailingList:showTeam}
  methods: [GET]
  requirements:
    department: \d+
    semester: \d+

generate_all_mail_list:
  path: /kontrollpanel/epostlister/alle
  defaults: {_controller: AppBundle:MailingList:showAll}
  methods: [GET]
  requirements:
    department: \d+
    semester: \d+

assistants:
    path: /assistenter/{id}
    defaults: {_controller: AppBundle:Assistant:index, id: null}
    methods: [GET, POST]
    requirements:
        id: \d+

team:
    path: /team
    defaults: { _controller: AppBundle:BoardAndTeam:show }

teachers:
    path: /laerere
    defaults: { _controller: AppBundle:Teacher:index }

about_new:
    path: /om
    defaults: { _controller: AppBundle:AboutVektor:show }
##########################################
#               Feedback                 #
##########################################
feedback_admin_index:
    path: /kontrollpanel/feedback
    defaults: {_controller: AppBundle:Feedback:index }
    methods: [GET, POST]
feedback_admin_list:
    path: /kontrollpanel/feedback/list
    defaults: {_controller: AppBundle:Feedback:showAll }
    methods: [GET]
feedback_admin_show:
    path: /kontrollpanel/feedback/show/{id}
    defaults: {_controller: AppBundle:Feedback:show }
    methods: [GET]
feedback_admin_delete:
    path: /kontrollpanel/feedback/delete/{id}
    defaults: {_controller: AppBundle:Feedback:delete}
    methods: [POST]

