{% extends 'adminBase.html.twig' %}

{% block title %}
    Ny Spørreundersøkelse
{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset_with_version('css/pages/admin/survey_form.css') }}">
{% endblock %}

{% block breadcrumb %}
    {% if survey.id %}
        <li class="breadcrumb-item">
            <a href="{{ path('surveys', {'id': survey.semester.id}) }}">Undersøkelser</a>
        </li>
        <li class="breadcrumb-item active">{{ survey.name }}</li>
    {% else %}
        <li class="breadcrumb-item">
            <a href="{{ path('surveys') }}">Undersøkelser</a>
        </li>
        <li class="breadcrumb-item active">Ny undersøkelse</li>
    {% endif %}
{% endblock %}



{% block javascripts %}
    <script>

        /**
         * This object organizes the javascript used by this twig.
         * It handles all the client side functionality required to make use of embedded form collections,
         * and the ability to add and remove objects, such as adding new questions and alternatives to a interview schema.
         * It uses prototypes, which are blueprints with placeholder values, to dynamically generate new form components.
         *
         * See: http://symfony.com/doc/current/cookbook/form/form_collections.html
         *
         * The onReady function is called when the document is ready.
         */
        IntSchema = {

            // The container for all the questions
            questions: $('#questions'),

            // The add question button
            addQuestionButton: $('#addQuestionButton'),

            // The prototype for a question alternative
            aPrototype: $('#prototypes').data('prototype-a'),

            // The prototype for a question
            qPrototype: $('#prototypes').data('prototype-q'),

            onReady: function () {
                // Set up the questions that are already in the database (add buttons etc)
                console.log(IntSchema.questions)
                IntSchema.questions.find('.card').each(IntSchema.setUp);

                // Find the initial number of questions in the schema
                IntSchema.questions.data('q-index', IntSchema.questions.length);

                // Bind the add question functionality to the add question button
                IntSchema.addQuestionButton.on('click', IntSchema.addQuestion);
            },

            setUp: function (i) {
                console.log(i)
                var alternativeList = $(this).find('.alternatives');
                var alternatives = alternativeList.find('.form-group');
                var type = $(this).find('select');

                alternativeList.data('a-index', alternatives.length);
                alternativeList.data('q-index', i);

                IntSchema.addQuestionDeleteButton($(this));

                var alternativeButton = IntSchema.addAlternativeAddButton($(this));

                IntSchema.toggleAlternatives(type, alternatives, alternativeButton);

                type.on('change', function () {
                    IntSchema.toggleAlternatives(type, alternatives, alternativeButton);
                });

                alternatives.each(function () {
                    IntSchema.addAlternativeDeleteButton($(this));
                });
            },

            addQuestion: function (event) {
                event.preventDefault();

                var qIndex = IntSchema.questions.data('q-index');
                var newQuestion = $(IntSchema.qPrototype.replace(/__q_prot__/g, qIndex));
                var newAlternatives = $('<div></div>').addClass('alternatives col-8 col-md-6 col-lg-5');
                var newButtons = $('<div></div>').addClass('buttons col-8 col-md-6 col-lg-5');

                newAlternatives.data('a-index', 0);
                newAlternatives.data('q-index', qIndex);

                var question = $('<div></div>').addClass('card question-card');
                var questionHeader = $('<div>Spørsmål</div>').addClass('card-header');

                var cardBody = $('<div></div>').addClass('card-body')
                        .append(newQuestion)
                        .append($('<div></div>').addClass('row').append(newAlternatives))
                        .append($('<div></div>').addClass('row').append(newButtons));

                question.append(questionHeader).append(cardBody);

                var questionCard = cardBody.parent();

                IntSchema.addQuestionDeleteButton(questionCard);
                var alternativeButton = IntSchema.addAlternativeAddButton(cardBody);
                alternativeButton.hide();
                IntSchema.addOrderButtons(questionCard);

                IntSchema.questions.append(question);

                var type = newQuestion.find('select');

                type.on('change', function () {
                    IntSchema.toggleAlternatives(type, newAlternatives, alternativeButton);
                });

                IntSchema.questions.data('q-index', qIndex + 1);
            },

            addQuestionDeleteButton: function (questionCard) {
                var deleteButton = $('<button class="float-right clickable btn btn-sm btn-outline-danger">Slett&nbsp;<i class="fa fa-trash-o text-danger"></i></button>');
                var header = questionCard.find('.card-header').first();

                header.append(deleteButton);

                deleteButton.on('click', function (event) {
                    event.preventDefault();
                    questionCard.remove();
                });
            },

            addAlternativeAddButton: function (panel) {
                var alternativeButton = $('<a href="#" class="button tiny"><i class="fa fa-plus"></i> Alternativ</a>');
                var alternatives = panel.find('.alternatives');
                var buttons = panel.find('.buttons');

                buttons.append(alternativeButton);

                alternativeButton.on('click', null, alternatives, IntSchema.addAlternative);

                return alternativeButton;
            },

            addAlternativeDeleteButton: function (alternative) {
                var deleteButton = $('<button class="btn btn-sm btn-outline-danger float-right">Slett&nbsp;<i class="fa fa-trash-o"></i></button>');

                alternative.append(deleteButton);

                deleteButton.on('click', function (event) {
                    event.preventDefault();
                    alternative.closest(".alternative").remove();
                });
            },

            addAlternative: function (event) {
                event.preventDefault();
                var alternatives = event.data;

                var aIndex = alternatives.data('a-index');
                var qIndex = alternatives.data('q-index');

                var upButton = $('<button class="btn btn-sm btn-outline-secondary">Opp&nbsp;<i class="fa fa-arrow-up"/></button>');
                var downButton = $('<button class="btn btn-sm btn-outline-secondary">Ned&nbsp;<i class="fa fa-arrow-down"/></button>');

                upButton.on('click', function (e) {
                    e.preventDefault();
                    upButton.closest('.alternative').insertBefore(upButton.closest('.alternative').prev('.alternative'));
                });
                downButton.on('click', function (e) {
                    e.preventDefault();
                    downButton.closest('.alternative').insertAfter(downButton.closest('.alternative').next('.alternative'));
                });

                var newAlternative = $(IntSchema.aPrototype.replace(/__a_prot__/g, aIndex).replace(/__q_prot__/g, qIndex));

                var alternativeRow = $('<div class="alternative"></div>');
                alternativeRow.append(newAlternative).append(upButton).append(downButton);

                newAlternative.append(upButton);
                newAlternative.append(downButton);
                alternatives.data('a-index', aIndex + 1);
                alternatives.append(alternativeRow);

                IntSchema.addAlternativeDeleteButton(newAlternative);
            },

            toggleAlternatives: function (select, alternatives, alternativeButton) {
                if (select.val() == 'text') {
                    alternatives.empty();
                    alternativeButton.hide();
                } else if (select.val() == 'radio') {
                    alternativeButton.show();
                } else {
                    alternativeButton.show();
                }
            },

            addOrderButtons: function (questionCard) {
                var upButton = $('<button class="btn btn-sm btn-outline-secondary float-right">Opp&nbsp;<i class="fa fa-arrow-up"/></button>');
                var downButton = $('<button class="btn btn-sm btn-outline-secondary mx-2 float-right">Ned&nbsp;<i class="fa fa-arrow-down"/></button>');
                var header = questionCard.find('.card-header').first();

                upButton.on('click', function (e) {
                    e.preventDefault();
                    questionCard.insertBefore(questionCard.prev('.question-card'));
                });
                downButton.on('click', function (e) {
                    e.preventDefault();
                    questionCard.insertAfter(questionCard.next('.question-card'));
                });

                header.append(downButton);
                header.append(upButton);

                return upButton;
            },
        };

        $(document).ready(IntSchema.onReady);

    </script>
{% endblock %}

{% block body %}
    {{ form_start(form) }}
    <div class="card">
        <div class="card-header"><i class="fa fa-comment-o"></i> Spørreundersøkelse</div>
        <div class="card-body">
            {{ form_row(form.name) }}
            {{ form_row(form.semester ) }}
            {{ form_row(form.showCustomFinishPage ) }}
            {{ form_row(form.confidential) }}
            {{ form_row(form.finishPageContent ) }}
        </div>
    </div>

    <div
            id="prototypes"
            data-prototype-a="{{ form_row(form.surveyQuestions.vars.prototype.children['alternatives'].vars.prototype.alternative) | e }}"
            data-prototype-q="{{ form_row(form.surveyQuestions.vars.prototype.question) | e }}
                {{ form_row(form.surveyQuestions.vars.prototype.help) | e }}
                {{ form_row(form.surveyQuestions.vars.prototype.type) | e }}
                {{ form_row(form.surveyQuestions.vars.prototype.optional) | e }}
                "
    >
    </div>

    <div id="questions">
        {% for surveyQuestion in form.surveyQuestions %}
            <div class="card">
                <div class="card-header">Spørsmål</div>
                <div class="card-body">
                    {{ form_row(surveyQuestion.question) }}
                    {{ form_row(surveyQuestion.help) }}
                    {{ form_row(surveyQuestion.type) }}
                    <div class="row">
                        <div class="alternatives col-8 col-md-6 col-lg-4">
                            {% for alternative in surveyQuestion.alternatives %}
                                <div class="alternative">
                                    {{ form_row(alternative.alternative) }}
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                    <div style="margin-top:5px;">
                        {{ form_row(surveyQuestion.optional) }}

                    </div>
                    <div class="row">
                        <div class="buttons col-8 col-md-6 col-lg-4">
                        </div>
                    </div>
                </div>
            </div>
        {% endfor %}
    </div>


    <div class="card">
        <div class="card-body">
            <p>
                <a href="#" id="addQuestionButton" class="button tiny">
                    <i class="fa fa-plus"></i> Nytt Spørsmål
                </a>
            </p>

            {{ form_widget(form.save, {'attr': {'class': 'btn btn-primary'}}) }}
        </div>
    </div>
    <div class="hide">
        {{ form_rest(form) }}
    </div>
    {{ form_end(form) }}
{% endblock %}
