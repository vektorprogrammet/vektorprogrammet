{#
    This is the main gallery template. All html elements for the galllery are rendered here or in sub-templates of
    this one.
#}

{% extends 'base.html.twig' %}

{% block title %}
    Galleri
{% endblock %}

{% block javascripts %}
    <script src="{{ asset('scripts/galleria/galleria-1.4.2.min.js') }}"></script>
    <script src="{{ asset('scripts/datepicker/foundation-datepicker.js') }}"></script>
    <script type="text/javascript">

        /**
         * This function re-reads the list of albums from the database and updates the option elements available in
         * the select box where to user chooses an album to view.
         * The parameter id specifies which optin element to select after the update. A negative value is interpreted as the first option element.
         * */
         function updateAlbumSelectBox(id){
            $.ajax({
                type: "POST",
                url: "{{ path('gallery_galleries') }}",
                success: function (data){
                    //The variable data now contains a bunch of JSON records showing: 'id', 'name' and 'canEdit' for each album
                    //First clear existing options to avoid duplicating a bunch of them
                    $("#galleries_drop_down_list").empty();
                    //Create options for the select box and append them
                    $.each(data, function(index, value){
                        jQuery('<option/>', {
                            value: value.id, // <= The value attribute is equal to the album's id in the database
                            text: value.name,
                            "data-user-can-edit-gallery": value.canEdit // <= A boolean telling if requesting user is allowed to edit this album
                        }).appendTo("#galleries_drop_down_list");
                    });
                    selectGalleryOnDropDownList(id);
                },
                error: function (){
                    alert('Feil oppsto ved innlesing av albumliste. Kontakt IT-ansvarlig.');
                }
            });
         }

        /**
         * Selects an album on the album select box by id (id of album in database)
         * If parameter id is negative, it is interpreted as selecting the first element.
         * If the select box contains no elements, nothing is done here.
         * */
        function selectGalleryOnDropDownList(id){
            var selectBox = $("#galleries_drop_down_list");
            //Get the option elements inside the select box
            var options = selectBox.children('option');
            //if (options.length == 0) {
            //    alert("options length is 0!?!?");
            //    return;
            //}
            //If id is negative select the first option element and return
            if (id < 0) {
                selectBox.val(selectBox.children("option:first").val());
                selectBox.trigger('change'); // Need to explicitly trigger change event when using code to select
                return;
            }
            //Iterate through the list of option values in the box. Report an error if it doesn't exist.
            //todo: No need to iterate here...I think
            var found = false;
            selectBox.children('option').each(function(){
                if (this.value == id) {
                    found = true;
                    selectBox.val(id);
                    selectBox.trigger('change'); // Need to explicitly trigger change event when using code to select
                    return false; // <= Breaks the loop. (note that we are in a inner function now...)
                }
            });
            if (!found)
                alert("En feil skjedde da det ble forsøkt å velge et ikke eksisterende album i album select boksen. Album id: " + id + ". Kontakt IT-ansvarlig.");
        }

        /**
         * When page is loaded this function is called.
         */
        $(document).ready( function () {
            var selectBox = $("#galleries_drop_down_list");

            /**
             * Listens for a new selection made in the album select box. Shows the album selected.
             */
            selectBox.on('change', function(){
                //Get the id of selected album
                var album_id = selectBox.children(":selected").val(); // $("#galleries_drop_down_list :selected").val();
                //Create the path for requesting the album from the server
                var path = "album/" + album_id; //todo: hardcoded path..not good
                //Make the request
                $.ajax({
                    type: "POST",
                    url: path,
                    success: function (data){
                        //data returned from server contains gallery_photos.html.twig rendered with chosen album as argument
                        $("#main_section_gallery").html(data);
                    },
                    error: function (){
                        alert('Feil skjedde ved innhenting av bilder fra album med id ' + album_id + '. Kontakt IT-ansvarlig.')
                    }
                });
                selectBox.blur();
                //Enable/disable edit and delete buttons according to the permissions requesting user has.
                // TODO: double check that this is handled back end also!
                if (selectBox.children("option:selected").attr("data-user-can-edit-gallery") == "true"){
                    $("#edit_this_gallery").attr("disabled", false);
                    $("#delete_gallery").attr("disabled", false);
                } else {
                    $("#edit_this_gallery").attr("disabled", true);
                    $("#delete_gallery").attr("disabled", true);
                }
            });

            /**
             * Handles click on delete button
             */
            $("#delete_gallery").on('click', function(){
                var selectedOption = selectBox.children(":selected");
                var gallery_name = selectedOption.text();
                var confirmed = confirm('Vil du virkelig slette hele dette albumet (' + gallery_name + ') og alle bildene? ');
                if (confirmed){
                    var album_id = selectedOption.val();
                    var path = "gallery_delete_album/" + album_id;
                    $.ajax({
                        type: "POST",
                        url: path,
                        success: function (){
                            event.preventDefault();
                            //Delete the option node from the select drop down
                            selectedOption.remove();
                            alert('Albumet ble slettet');
                            //Select the first album in the updated list
                            selectGalleryOnDropDownList(-1);
                        },
                        error: function (){
                            alert('Feil skjedde ved sletting av album med id ' + album_id + '. Kontakt IT-ansvarlig.')
                        }
                    });
                }
                $("#delete_gallery").blur();
            });

            /**
             * Handles click on edit gallery
             */
            $("#edit_gallery").on('click', function(){
                var selectedOption = selectBox.children(":selected");
                var album_id = selectedOption.val();
                var path = "edit_album/" + album_id;
                $.ajax({
                    type: "POST",
                    url: path,
                    success: function (data){
                        $("#main_section_gallery").html(data);
                        $("#edit_gallery").blur();
                        $('.datepicker').fdatepicker({language:'no'});
                    },
                    error: function (){
                        alert('Feil skjedde ved redigering av album med id ' + album_id + '. Kontakt IT-ansvarlig.')
                    }
                });
                $("#edit_gallery").blur();
            });

            /**
             * Handles click om submit in create gallery form (the form is inside the modal that
             * appears when clicking "opprett album").
             */
            $('form#gallery_create').submit( function (event) {
                event.preventDefault();
                var formdata = $(this).serialize();
                $.ajax({
                    type: "POST",
                    url: "{{ path('gallery_create') }}",
                    data: formdata,
                    success: function (data){
                        //data contains the full list of albums, updated with the new created album and select it
                        updateAlbumSelectBox(data[data.length-1].id);
                    },
                    error: function (){
                        alert('Feil skjedde ved oppretting av album. Kontakt IT-ansvarlig.')
                    }
                });
                //Close the modal
                $('#createGalleryModal').foundation('reveal', 'close');
            });
            //Read the list of albums into the select box. Choose the first album in the list as selected
            updateAlbumSelectBox({{ id }});

            {# For some reason I was unable to set the title of the gallery in the reveal in gallery_image_upload_form.thml.twig So I do it here todo: why have this inside doc-on-ready?#}
            $(document).on('open.fndtn.reveal', function () {
                var gallery_name = selectBox.children(":selected").text();
                $("#modalTitleGallery").next().html("<p>" + gallery_name + "</p>");
            });
        });

    </script>
{% endblock %}

{% block body %}

    <div class="row">
        <div class="small-12   medium-12 large-12 columns">
            {% include 'gallery/gallery_controls.html.twig' %}
        </div>
    </div>
    <div class="row" id="main_section_gallery">
    </div>

{% endblock %}