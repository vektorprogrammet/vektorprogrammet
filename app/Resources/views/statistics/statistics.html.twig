{% extends 'adminBase.html.twig' %}

{% block title %}
    Statistikk: Opptak
{% endblock %}

{% block scripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.min.js"></script>
{% endblock %}

{% block body %}
    <div class="row">
        <div class="small-12 columns">
            <ul class="inline-list">

                {# Departments dropdown #}
                {% include "common/department_dropdown.html.twig" with {'pathForDepartment': 'statistics_application_by_department', 'departmentParameterName': 'department'} %}

                {# Semester dropdown #}
                <li>
                    <a class="button tiny" data-dropdown="semesterDropDown" aria-controls="semesterDropDown"
                       aria-expanded="false">{% if semester != NULL %}{{ semester.name }}{% else %}Semester{% endif %}
                        <i
                                class="fa fa-caret-down"></i></a>
                    <ul id="semesterDropDown" class="f-dropdown" data-dropdown-content tabindex="-1" aria-hidden="true"
                        aria-autoclose="false" tabindex="-1">

                        {% for s in get_semesters(department) %}

                            <li><a href="{{ path('statistics_application_by_semester',
                                { 'department': s.department.id, 'semester': s.id }) }}">{{ s.name }}</a></li>

                        {% endfor %}
                    </ul>
                </li>
            </ul>
        </div>
        {% if applicationData.count %}
            <header class="small-12 columns">
                <h3>Søkerstatistikk</h3>
                <h6>Antall søkere: {{ applicationData.count }}</h6>
            </header>
            <div class="small-12 columns equalheight charts" id="applicationCharts">
            </div>
        {% endif %}
        {% if assistantHistoryData.count %}
            <header class="small-12 columns">
                <h3>Opptaksstatistikk</h3>
                <h6>Antall assistenter: {{ assistantHistoryData.assistantHistoryCount }}</h6>
                <h6>Antall stillinger: {{ assistantHistoryData.positionsCount }}</h6>
            </header>
            <div class="small-12 columns equalheight charts" id="admissionCharts">
            </div>
        {% endif %}
        {% if assistantHistoryData.count == 0 and applicationData.count == 0 %}
            <div class="col-xs-12 columns">
                <h4>Ingen data dette semesteret</h4>
            </div>
        {% endif %}
    </div>
    <script>
        function getColor(i) {
            var colors = ["#36A2EB", "#4BC0C0", "#9F65AD", "#FFCE56", "#FF6384", "#737373", "#D07054", "#D97DB5"];
            return colors[i % colors.length];
        }
        document.addEventListener('DOMContentLoaded', function () {
            Chart.defaults.global.animation = false;
            {% if applicationData.count %}
            var genderData = [
                {
                    label: 'Gutt' + ' ({{ (applicationData.maleCount/applicationData.count*100)|round }} %)',
                    value: {{ applicationData.maleCount }},
                    color: getColor(0)
                },
                {
                    label: 'Jente' + ' ({{ (applicationData.femaleCount/applicationData.count*100)|round }} %)',
                    value: {{ applicationData.femaleCount }},
                    color: getColor(4)
                }

            ];
            var applicantsData = [
                {
                    label: 'Nye' + ' ({{ ((applicationData.count- applicationData.previousParticipationCount)/applicationData.count*100)|round }} %)',
                    value: {{ applicationData.count-applicationData.previousParticipationCount }},
                    color: getColor(0)
                },
                {
                    label: 'Gamle' + ' ({{ (applicationData.previousParticipationCount/applicationData.count*100)|round }} %)',
                    value: {{ applicationData.previousParticipationCount }},
                    color: getColor(1)
                }

            ];
            var fieldOfStudyData = [
                {% for fieldOfStudy in applicationData.fieldsOfStudyCounts|keys %}
                {
                    label: '{{ fieldOfStudy }}' + ' ({{ (applicationData.fieldsOfStudyCounts[fieldOfStudy]/applicationData.count*100)|round }} %)',
                    value: {{ applicationData.fieldsOfStudyCounts[fieldOfStudy] }},
                    color: getColor({{ loop.index0 }})
                },
                {% endfor %}
            ];
            var studyYearData = [
                {% for studyYear in applicationData.studyYearCounts|keys %}
                {
                    label: '{{ studyYear }}. år' + ' ({{ (applicationData.studyYearCounts[studyYear]/applicationData.count*100)|round }} %)',
                    value: {{ applicationData.studyYearCounts[studyYear] }},
                    color: getColor({{ loop.index0 }})
                },
                {% endfor %}
            ];
            var admissionData = [
                {
                    label: 'Tatt opp' + ' ({{ (assistantHistoryData.count/applicationData.count*100)|round }} %)',
                    value: {{ assistantHistoryData.count }},
                    color: getColor(0)
                },
                {
                    label: 'Ikke tatt opp' + ' ({{ ((applicationData.count-assistantHistoryData.count-applicationData.cancelledInterviewsCount)/applicationData.count*100)|round }} %)',
                    value: {{ applicationData.count-assistantHistoryData.count-applicationData.cancelledInterviewsCount }},
                    color: getColor(4)
                },
                {
                    label: 'Kansellerte intervjuer' + ' ({{ (applicationData.cancelledInterviewsCount/applicationData.count*100)|round }} %)',
                    value: {{ applicationData.cancelledInterviewsCount }},
                    color: getColor(3)
                }
            ];

            var $applicationCharts = $('#applicationCharts');
            var $admissionCharts = $('#admissionCharts');
            renderChart(fieldOfStudyData, 'Studie', $applicationCharts, false);
            renderChart(studyYearData, 'Stuideår', $applicationCharts, true);
            renderChart(genderData, 'Kjønn', $applicationCharts, true);
            renderChart(applicantsData, 'Nye/Gamle Søkere', $applicationCharts, true);
            renderChart(admissionData, 'Opptak', $admissionCharts, true);
            {% endif %}

            {% if assistantHistoryData.count %}
            var acceptedGenderData = [
                {
                    label: 'Gutt' + ' ({{ (assistantHistoryData.maleCount/assistantHistoryData.count*100)|round }} %)',
                    value: {{ assistantHistoryData.maleCount }},
                    color: getColor(0)
                },
                {
                    label: 'Jente' + ' ({{ (assistantHistoryData.femaleCount/assistantHistoryData.count*100)|round }} %)',
                    value: {{ assistantHistoryData.femaleCount }},
                    color: getColor(4)
                }
            ];

            renderChart(acceptedGenderData, 'Kjønn', $admissionCharts, true);
            {% endif %}

            function renderChart(data, label, chartRoot, legend) {
                var div = $('<div></div>');
                div.addClass('small-12 medium-6 large-4 columns');

                // The pie chart will be painted on the canvas
                var canvas = $('<canvas width="185" height="125"><canvas/>');

                // Add the question text as a title above the chart
                div.append('<h6>' + label + '</h6>');

                // Create a chart container and append the canvas
                var chart = $('<div></div>');
                chart.addClass('chart');
                chart.append(canvas);
                div.append(chart);

                chartRoot.append(div);

                // Paint the charts to the canvases using Chart.js
                ctx = canvas.get(0).getContext("2d");
                var myNewChart = new Chart(ctx).Pie(data);

                if (legend) {
                    chart.append($(myNewChart.generateLegend()));
                }
            }

            /**
             * Equalizes height of .equalheight children nodes
             */
            $(document).ready(function () {
                $('.equalheight').each(function () {
                    var maxHeight = 0;
                    $(this).children().each(function () {
                        if ($(this).height() > maxHeight)
                            maxHeight = $(this).height();
                    });
                    $(this).children().height(maxHeight);
                });
            })

        })

    </script>

{% endblock %}

