{%  extends 'base.html.twig' %}

{% block stylesheets %}
    <link rel="stylesheet" href="https://api.mazemap.com/js/v2.0.12/mazemap.min.css">
    <link rel="stylesheet" href="{{ asset_with_version('css/pages/parents.css') }}">
{% endblock %}


{%  block title %}
    Vektorprogrammet
{%  endblock %}

{% block body %}

    <div class="container">
        <header class="page-header">
            <div class="col-md-12">
                <h1>Foreldrekurs avholdt {{ parentCourse.date | date("F j, Y")}} kl. {{ parentCourse.date | date('H:i') }}</h>
            </div>
        </header>

        <div class="content">
            <p class="card-text"><strong>Foredragsholder:</strong> {{ parentCourse.speaker }} </p>
            <p class="card-text"><strong>Informasjon:</strong> {{ parentCourse.information }} </p>
            <p class="card-text"><strong>Sted:</strong> {{ parentCourse.place }}, Trondheim</p>
        </div>
        <br>
        <div id="map" class="mazemap mzmp"></div>
        <br>
        <section class="row content">
            <div class="col-12 col-sm-8 offset-sm-2">
                <a class="btn btn-success btn-block apply-button p-4 text-uppercase medium-bold"
                   href="{{ path('parent_assignment_create', {'id': parentCourse.id}) }}">Meld meg på nå</a>
            </div>
        </section>
    </div>
    <div class="link-data" data-mazemap-link="{{ parentCourse.link }}"></div>


{% endblock %}

{% block javascripts %}
    <script type='text/javascript' src='https://api.mazemap.com/js/v2.0.12/mazemap.min.js'></script>

    <script>
        const mazeMapLink = document.querySelector(".link-data").dataset.mazemapLink;

        let paramString = mazeMapLink.split('#')[1];
        let params_arr = paramString.split('&');

        let center = '';
        let zlevel = '';
        for (let i = 0; i < params_arr.length; i++) {
            let pair = params_arr[i].split('=');
            console.log(typeof pair[0]);
            if (pair[0] == 'center') {
                center = pair[1];
            }
            if (pair[0] == 'zlevel'){
                zlevel = pair[1];
            }
        }

        const longitude = center.split(',')[0];
        const latitude = center.split(',')[1];
        const lngLat = {lng:longitude, lat:latitude}

        let map = new Mazemap.Map({
            container: 'map',
            campuses: 1,
            center: {lng: longitude, lat: latitude},
            zoom: 18,
            zLevel: zlevel
        });
        map.addControl(new Mazemap.mapboxgl.NavigationControl());

        let mazeMarker = new Mazemap.MazeMarker({
            color: '#6fceee',
            innerCircle: true,
            innerCircleColor: '#FFF',
            size: 50,
            innerCircleScale: 0.4,
            zLevel: zlevel,
        })
            .setLngLat(lngLat)
            .addTo(map);
    </script>
{% endblock %}
