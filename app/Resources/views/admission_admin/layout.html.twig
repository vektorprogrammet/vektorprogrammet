{% extends 'adminBase.html.twig' %}

{% block customScripts %}

    <script src="{{ asset('libs/fosjsrouting/js/router.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', {"callback": "fos.Router.setData"}) }}"></script>
    <script src="{{ asset('js/stupidtable.js') }}"></script>
    <script src="{{ asset('js/deleteablerow.js') }}"></script>

    <script>

        /**
         * This object organizes the javascript used by this twig and the twigs extending it
         *
         * The onReady function is called when the document is ready.
         */
        var AppAdmin = {

            // The html table containing the applications
            appTable: $("#application-table"),

            onReady: function() {
                // Add sort functionality to the table containing the applications
                AppAdmin.appTable.stupidtable();

                // Add arrows after sorting the table
                AppAdmin.appTable.on("aftertablesort", AppAdmin.addSortArrows);

                // Bind delete application functionality to each application delete button
                AppAdmin.appTable.find(".deleteApplication").deleteablerow('admissionadmin_delete_application_by_id', {
                    confirmation: {
                        modal: $("#deleteAppModal"),
                        acceptButton: $("#deleteAppModal .accept"),
                        cancelButton: $("#deleteAppModal .cancel")
                    }
                });

                // Bind delete interview functionality to each interview delete button
                AppAdmin.appTable.find(".deleteInterview").deleteablerow('interview_delete', {
                    confirmation: {
                        modal: $("#deleteIntModal"),
                        acceptButton: $("#deleteIntModal .accept"),
                        cancelButton: $("#deleteIntModal .cancel")
                    }
                });

                // Bind assign interview functionality to each assign button
                AppAdmin.appTable.find(".assign").on("click", AppAdmin.getAssignForm);

                // Bind create substitute functionality to each create substitute button
                AppAdmin.appTable.find(".createSubstitute").on("click", AppAdmin.createSubstitute);

                // Bind create substitute functionality to each create substitute button
                AppAdmin.appTable.find(".createUser").on("click", AppAdmin.createUser);

                $("#bulkAction").on("click", AppAdmin.bulkAction);

                $("#bulkAllCheck, .bulkCheck").on("change", AppAdmin.toggleSelectAll);

                // Bind the bulk action submit button
                //$("form[name='bulk']").submit(AppAdmin.onBulkSubmit);
            },

            addSortArrows: function(event, data) {
                var th = $(this).find("th");
                th.find(".arrow").remove();
                var dir = $.fn.stupidtable.dir;

                var arrow = data.direction === dir.ASC ? "asc" : "desc";
                th.eq(data.column).append('<span class="arrow"> <i class="fa fa-sort-' + arrow + '"></i></span>');
            },

            getAssignForm: function(event) {
                event.preventDefault();
                var applicationId = parseInt($(this).closest('tr').attr('id'));
                var url = Routing.generate('interview_assign', { id: applicationId });
                var modal = $("#assignModal");

                $.ajax({
                    type: 'GET',
                    url: url,
                    cache: false,
                    success: function(response) {
                        modal.html(response.form);
                        modal.find("form").data("app-id", applicationId);
                        modal.find("form").submit(AppAdmin.onAssignFormSubmit);
                        modal.foundation("reveal", "open");
                    }
                });
            },

            onAssignFormSubmit: function(event) {
                event.preventDefault();
                var formdata = $(this).serialize();
                var applicationId = $(this).data("app-id");

                $.ajax({
                    type: "POST",
                    url: Routing.generate('interview_assign', { id: applicationId }),
                    data: formdata,
                    success: function(respone) {
                        AppAdmin.appTable.find("tr#"+applicationId).find(".assign").addClass("success");
                    }
                });

                //Close the modal
                $("#assignModal").foundation("reveal", "close");
            },

            createSubstitute: function(event) {
                event.preventDefault();
                var applicationId = parseInt($(this).closest('tr').attr('id'));
                var button = $(this);

                $.ajax({
                    type: 'GET',
                    url: Routing.generate('substitute_create', { id: applicationId }),
                    cache: false,
                    success: function(response) {
                        if(response.success) {
                            button.closest("td").find("a").addClass("secondary");
                            button.remove();
                        } else {
                            alert(response.cause);
                        }
                    }
                });
            },

            createUser: function(event) {
                event.preventDefault();
                var applicationId = parseInt($(this).closest('tr').attr('id'));
                var td = $(this).closest("td");

                $.ajax({
                    type: 'GET',
                    url: Routing.generate('admissionadmin_send_new_user_mail', { id: applicationId }),
                    cache: false,
                    success: function(response) {
                        if(response.success) {
                            td.empty();
                            td.html("Bruker opprettet");
                        } else {
                            alert(response.cause);
                        }
                    }
                });
            },

            bulkAction: function(event) {
                event.preventDefault();
                var bulkSelect = $("#bulkSelect");
                var n = $(".bulkCheck:checked").length;

                // If no checkbox is checked: do nothing
                if(n < 1) {
                    return;
                }

                switch(bulkSelect.val()) {
                    case "assign":
                        $.ajax({
                            type: 'GET',
                            url: Routing.generate('interview_assign_bulk'),
                            cache: false,
                            success: function(response) {
                                var modal = $("#assignModal");
                                modal.html(response.form);
                                modal.find("form").submit(AppAdmin.onBulkAssignFormSubmit);
                                modal.foundation("reveal", "open");
                            }
                        });
                        break;
                    case "deleteApplication":
                        var modal = $("#bulkModal");
                        var acceptBtn = $('<li><a href="#" class="button tiny">Slett</a></li>');
                        var cancelBtn = $('<li><a href="#" class="button tiny">Avbryt</a></li>');

                        modal.find(".modalMessage").html("Vil du virkelig slette s√∏knadede?");
                        modal.find(".modalButtons").empty().append(acceptBtn).append(cancelBtn);

                        acceptBtn.on("click", AppAdmin.bulkDeleteApplications);
                        cancelBtn.on("click", function(event){
                            event.preventDefault();
                            modal.foundation("reveal", "close");
                        });

                        modal.foundation("reveal", "open");
                        break;
                    case "deleteInterview":
                        var modal = $("#bulkModal");
                        var acceptBtn = $('<li><a href="#" class="button tiny">Slett</a></li>');
                        var cancelBtn = $('<li><a href="#" class="button tiny">Avbryt</a></li>');

                        modal.find(".modalMessage").html("Vil du virkelig slette intervjuene?");
                        modal.find(".modalButtons").empty().append(acceptBtn).append(cancelBtn);

                        acceptBtn.on("click", AppAdmin.bulkDeleteInterviews);
                        cancelBtn.on("click", function(event){
                            event.preventDefault();
                            modal.foundation("reveal", "close");
                        });

                        modal.foundation("reveal", "open");
                        break;
                }
            },

            bulkDeleteApplications: function(event) {
                event.preventDefault();
                var formdata = $("#bulk").serialize();

                $.ajax({
                    type: 'POST',
                    url: Routing.generate('admissionadmin_delete_application_bulk'),
                    data: formdata,
                    success: function(response) {
                        if(response.success) {
                            $(".bulkCheck:checked").closest("tr").remove();
                        } else {
                            alert(response.cause);
                        }

                    }
                });

                //Close the modal
                $("#assignModal").foundation("reveal", "close");
            },

            bulkDeleteInterviews: function(event) {
                event.preventDefault();
                var formdata = $("#bulk").serialize();

                $.ajax({
                    type: 'POST',
                    url: Routing.generate('interview_delete_bulk'),
                    data: formdata,
                    success: function(response) {
                        if(response.success) {
                            $(".bulkCheck:checked").closest("tr").remove();
                        } else {
                            alert(response.cause);
                        }

                    }
                });

                //Close the modal
                $("#assignModal").foundation("reveal", "close");
            },

            onBulkAssignFormSubmit: function(event) {
                event.preventDefault();
                // Serializes both the bulk checkbox form and the assign form (both have name=application)
                var formdata = $("form[name='application']").serialize();

                $.ajax({
                    type: "POST",
                    url: "{{ path('interview_assign_bulk') }}",
                    data: formdata,
                    success: function(response) {
                        $(".bulkCheck:checked").closest("tr").find(".assign").addClass("success");
                    }
                });

                //Close the modal
                $("#assignModal").foundation("reveal", "close");
            },

            toggleSelectAll: function() {
                if(this.checked) {
                    if($(this).attr("id") == "bulkAllCheck") {
                        $(".bulkCheck").prop("checked", true);
                    }
                } else {
                    if($(this).attr("id") == "bulkAllCheck") {
                        $(".bulkCheck").prop("checked", false);
                    } else {
                        $('#bulkAllCheck').prop("checked", false);
                    }
                }
            },
        };

        $(document).ready(AppAdmin.onReady);

    </script>

{% endblock %}

{% block title %}
    Opptak
{% endblock %}


{% block body %}
    <p></p>

    <div class="row">
        <div class="small-12 medium-12 large-12 columns">

            <h1>Opptak {{ departmentName }}</h1>

            <hr>

                <div class="row">
            {% if is_granted('ROLE_SUPER_ADMIN') %}
                    {# Contains the bulk action navigation. Bulk actions depends on interview status #}


                    <div class="small-3 columns">
                        <ul class="inline-list">

                            {# Department dropdown #}
                                <li>
                                    <a class="button tiny" data-dropdown="autoCloseExample" aria-controls="autoCloseExample" aria-expanded="false">{{ departmentName }} <i class="fa fa-caret-down"></i></a>
                                    <ul id="autoCloseExample" class="f-dropdown" data-dropdown-content tabindex="-1" aria-hidden="true" aria-autoclose="false" tabindex="-1">

                                        {% for d in departments %}

                                            <li><a href="{{ path('admissionadmin_filter_applications_by_department',
                                                { 'id': d.id, 'status': status }) }}">{{ d.shortName }}</a></li>

                                        {% endfor %}

                                    </ul>
                                </li>

                                {# Semester dropdown #}
                                <li>
                                    <a class="button tiny" data-dropdown="semesterDropDown" aria-controls="semesterDropDown" aria-expanded="false">{{ semesterName }} <i class="fa fa-caret-down"></i></a>
                                    <ul id="semesterDropDown" class="f-dropdown" data-dropdown-content tabindex="-1" aria-hidden="true" aria-autoclose="false" tabindex="-1">

                                        {% for s in semesters %}

                                            <li> <a href="{{ path(app.request.attributes.get('_route'),
                                                app.request.attributes.get('_route_params')|merge(app.request.query.all)|merge({ 'semester': s.id })) }}">{{ s.name }}</a> </li>

                                        {% endfor %}

                                    </ul>
                                </li>
                        </ul>
                    </div>
                {% endif %}
                    {# The interview status navigation #}
                    <div class="small-5 small-offset-4 columns" style="width:380px;">
                        <dl id="interviewStatusNav" class="sub-nav right">
                            <dt>Status:</dt>
                            <dd {{ (status == "new") ? 'class="active"' : ''  }}>
                                <a href="{{ path(app.request.attributes.get('_route'),
                                app.request.attributes.get('_route_params')|merge(app.request.query.all)|merge({ 'status': 'new' })) }}">Nye</a>
                            </dd>
                            <dd {{ (status == "assigned") ? 'class="active"' : ''  }}>
                                <a href="{{ path(app.request.attributes.get('_route'),
                                app.request.attributes.get('_route_params')|merge(app.request.query.all)|merge({ 'status': 'assigned' })) }}">Fordelt</a>
                            </dd>
                            <dd {{ (status == "interviewed") ? 'class="active"' : ''  }}>
                                <a href="{{ path(app.request.attributes.get('_route'),
                                app.request.attributes.get('_route_params')|merge(app.request.query.all)|merge({ 'status': 'interviewed' })) }}">Intervjuet</a>
                            </dd>
                        </dl>
                    </div>

            </div>

            <div class="row">

                {% block bulkNavigation %}

                {% endblock %}

                {% if not is_granted('ROLE_SUPER_ADMIN') %}
                    <div class="small-2 columns">
                        <ul class="inline-list">
                            {# Semester dropdown #}
                            <li>
                                <a class="button tiny" data-dropdown="semesterDropDown" aria-controls="semesterDropDown" aria-expanded="false">Semester <i class="fa fa-caret-down"></i></a>
                                <ul id="semesterDropDown" class="f-dropdown" data-dropdown-content tabindex="-1" aria-hidden="true" aria-autoclose="false" tabindex="-1">

                                    {% for s in semesters %}

                                        <li> <a href="{{ path(app.request.attributes.get('_route'),
                                            app.request.attributes.get('_route_params')|merge(app.request.query.all)|merge({ 'semester': s.id })) }}">{{ s.name }}</a> </li>

                                    {% endfor %}

                                </ul>
                            </li>
                        </ul>
                    </div>
                {% endif %}
            </div>


            {% block yourInterviews %}{% endblock %}

            {# Contains an application table, depends on interview status #}
            {% block applications %}

            {% endblock %}
        </div>
    </div>

    {# The confirmation modal, used to confirm application deletes #}
    <div id="deleteAppModal" class="reveal-modal small" data-reveal aria-labelledby="confirmModalDelete" aria-hidden="true" role="dialog">
        <h2 class="modalMessage">Vil du virkelig slette s√∏knaden?</h2>
        <ul class="inline-list modalButtons">
            <a href="#" class="button tiny accept">Slett</a>
            <a href="#" class="button tiny cancel">Avbryt</a>
        </ul>
    </div>

    {# The confirmation modal, used to confirm interview deletes #}
    <div id="deleteIntModal" class="reveal-modal small" data-reveal aria-labelledby="confirmModalDelete" aria-hidden="true" role="dialog">
        <h2 class="modalMessage">Vil du virkelig slette intervjuet?</h2>
        <ul class="inline-list modalButtons">
            <a href="#" class="button tiny accept">Slett</a>
            <a href="#" class="button tiny cancel">Avbryt</a>
        </ul>
    </div>

    {# The assign interview modal #}
    <div id="assignModal" class="reveal-modal tiny" data-reveal aria-labelledby="assignFormModal" aria-hidden="true" role="dialog">
    </div>

    {# The bulk modal, used by the various bulk actions #}
    <div id="bulkModal" class="reveal-modal small" data-reveal aria-labelledby="assignFormModal" aria-hidden="true" role="dialog">
        <h2 class="modalMessage"></h2>
        <ul class="inline-list modalButtons">
        </ul>
    </div>

{% endblock %}